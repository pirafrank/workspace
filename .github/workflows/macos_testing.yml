name: 'macos_testing'

on:
  push:
    branches:
      - develop
    paths:
      - base/setup_fzf.sh
      - base/setup_zprezto.zsh
      - workspaces/*.sh
      - setups/setup_env.sh
      - setups/setup_cloud_clients.sh
      - setups/setup_utils.sh
  workflow_dispatch:

jobs:
  testingMacOS1015:
    name: scripts testing on macOS 10.15 Catalina
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: "workspaces scripts testing"
      id: 'workspaces_scripts_testing_macos1015'
      shell: bash
      run: |
        cat workspace_versions.sh
        echo "loading versions"echo
        source workspace_versions.sh
        cd workspaces
        echo "installing java"
        bash setup_java.sh ${JAVAVERSION} ${JAVAVENDOR}
        echo "installing nvm and node"
        bash setup_nvm.sh ${NODEVERSION}
        echo "installing Go"
        bash setup_golang.sh ${GOLANGVERSION}
        echo "install pyenv and python"
        choice=$(curl -sSL https://api.github.com/repos/pyenv/pyenv/contents/plugins/python-build/share/python-build | grep name | cut -d'"' -f4 | grep -v '-' | tail -n +2 | grep "${PYTHON3VERSION}" | tail -1)
        bash setup_pyenv.sh ${choice}
        echo "install rvm and ruby"
        bash setup_rvm.sh ${RUBYVERSION}
        echo "install rust and cargo"
        bash setup_rust.sh
    - name: "cloud clients and utils scripts"
      id: 'cloud_clients_and_utils_scripts_macos1015'
      shell: bash
      run: |
        cd setups
        bash setup_utils.sh
        bash setup_cloud_clients.sh
  testingMacOS11:
    name: scripts testing on macOS 11 Big Sur
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: "workspaces scripts testing"
      id: 'workspaces_scripts_testing_macos11'
      shell: bash
      run: |
        cat workspace_versions.sh
        echo "loading versions"echo
        source workspace_versions.sh
        cd workspaces
        echo "installing java"
        bash setup_java.sh ${JAVAVERSION} ${JAVAVENDOR}
        echo "installing nvm and node"
        bash setup_nvm.sh ${NODEVERSION}
        echo "installing Go"
        bash setup_golang.sh ${GOLANGVERSION}
        echo "install pyenv and python"
        choice=$(curl -sSL https://api.github.com/repos/pyenv/pyenv/contents/plugins/python-build/share/python-build | grep name | cut -d'"' -f4 | grep -v '-' | tail -n +2 | grep "${PYTHON3VERSION}" | tail -1)
        bash setup_pyenv.sh ${choice}
        echo "install rvm and ruby"
        bash setup_rvm.sh ${RUBYVERSION}
        echo "install rust and cargo"
        bash setup_rust.sh
    - name: "cloud clients and utils scripts"
      id: 'cloud_clients_and_utils_scripts_macos11'
      shell: bash
      run: |
        cd setups
        bash setup_utils.sh
        bash setup_cloud_clients.sh
  sendNotification:
    name: Send Notification
    runs-on: ubuntu-20.04
    if: ${{ always() }}
    needs: [testingMacOS1015, testingMacOS11]
    steps:
    - name: Send Push Notification
      uses: fjogeleit/http-request-action@master
      if: always()
      with:
        url: ${{ secrets.NOTIFICATION_WEBHOOK_URI }}
        method: 'POST'
        data: '{ "value1": "[GitHub] ${{ github.repository }}", "value2": "Workflow &quot;${{ github.workflow }}&quot; on branch ${{ github.ref }} finished.<br>testingMacOS1015: ${{ needs.testingMacOS1015.result }}<br>testingMacOS11: ${{ needs.testingMacOS11.result }}.", "value3": "<br>Commit ${{ github.sha }}.<br>https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" }'
