#
# * Author *
#   pirafrank (fpira.com)
#
# * Credits *
#   some of this options found in links below:
#     - https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
#
#
# Notes:
# to reload tmux config from inside tmux
#   [prefix] :source-file ~/.tmux.conf
# to reload tmux config from shell
#   tmux source-file ~/.tmux.conf
#

### BASIC SETTINGS

# create a new session if trying to attach and none is available
new-session

# enable 256-color mode. start tmux with '-2' option if this doesn't seem to work
set -g default-terminal "screen-256color"

# enable mouse events and scrolling support
set-window-option -g mouse on

# set pass focus events to vim/nvim
set -g focus-events on

# increase the number of scrollback lines
set -g history-limit 50000

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# avoid suspending the client
unbind-key C-z

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# set vim as the default editor
EDITOR=vim

# enable vi mode
# navigate window buffer like you'd do in vim
setw -g mode-keys vi

# copy mode customizations
# (mouse on and mode-keys vi required)
set-option -s set-clipboard off
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
# copy selection to system clipboard
if-shell 'uname | grep Linux' \
  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -se c -i"' ''
if-shell 'uname | grep Darwin' \
  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"' ''
if-shell 'uname | grep -i cygwin' \
  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "cat >/dev/clipboard"' ''
if-shell 'uname | grep Linux' \
  'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"' ''
if-shell 'uname | grep Darwin' \
  'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"' ''
if-shell 'uname | grep -i cygwin' \
  'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "cat >/dev/clipboard"' ''

# No delay for escape key press
set -sg escape-time 0

### PANES

# split panes using '|' and '-'
# keep the current work dir
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# move through panes like through lines in vim
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

### WINDOWS

# create new window in same path
bind c new-window -c '#{pane_current_path}'

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# easier and faster switching between next/prev window
#bind C-p previous-window
#bind C-n next-window

# faster window switching with ctrl-arrow
bind -n C-Left previous-window
bind -n C-Right next-window

# kill windows easier
bind k confirm kill-window

# Start window numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
#set -g renumber-windows on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

### PLUGINS

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Tmux Resurrect Settings
# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_vim_and_neovim_sessions.md
#set -g @resurrect-strategy-vim 'session' # Fom vim
#set -g @resurrect-strategy-nvim 'session' # For neovim

# Tmux Continuum Settings
# Automatically Restore previously Saved Tmux Sessions
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-save-interval '5'
# open iterm at boot only on macOS
if-shell 'uname | grep Darwin' \
  'set -g @continuum-boot-options "iterm"' ''

### STATUS BAR

set -g status 'on'
set -g status-interval 60  # refresh rate
set -g status-bg 'colour235'
set -g status-justify 'left'
set -g status-left-length '100'
set -g status-right-length '100'
set -g status-attr 'none'
set -g status-utf8 'on'
set -g status-left-attr 'none'
set -g status-right-attr 'none'
set -g message-fg 'colour222'
set -g message-bg 'colour238'
set -g message-command-fg 'colour222'
set -g message-command-bg 'colour238'
set -g pane-border-fg 'colour238'
set -g pane-active-border-fg 'colour154'
setw -g window-status-fg 'colour121'
setw -g window-status-attr 'none'
setw -g window-status-activity-bg 'colour235'
setw -g window-status-activity-attr 'none'
setw -g window-status-activity-fg 'colour154'
setw -g window-status-separator ''

set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #(whoami) #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] %H:%M  %a %e %b #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #H #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour154] '
setw -g window-status-format '#[fg=colour121,bg=colour235] #I  #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I  #W #F #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'

### TPM init

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

